@function calcRem($size) {
	$remSize: $size / $baseFontSize;
	@return $remSize * 1rem;
}




// ==== BACKGROUND GRADIENT ====
@mixin gradient($startColor: #3C3C3C, $endColor: #999999) {
	background-color: $startColor;
	background-image: -webkit-gradient(linear, left top, left bottom, from($startColor), to($endColor));
	background-image: -webkit-linear-gradient(top, $startColor, $endColor);
	background-image: -moz-linear-gradient(top, $startColor, $endColor);
	background-image: -ms-linear-gradient(top, $startColor, $endColor);
	background-image: -o-linear-gradient(top, $startColor, $endColor);
	background-image: linear-gradient(top, $startColor, $endColor);
	filter: progid:DXImageTransform.Microsoft.gradient(startColorStr='#{$startColor}', endColorStr='#{$endColor}');
}

// ==== BOX SHADOW ====
@mixin box-shadow($x: 2px, $y: 2px, $blur: 5px, $color: rgba(0,0,0,.4), $inset: "") {
	-webkit-box-shadow: $inset $x $y $blur $color;
	   -moz-box-shadow: $inset $x $y $blur $color;
			box-shadow: $inset $x $y $blur $color;
}

// ==== BORDER RADIUS ====
@mixin rounded($radius: 5px) {
	background-clip: padding-box;
	-webkit-border-radius: $radius;
	   -moz-border-radius: $radius;
			border-radius: $radius;
}

@mixin border-radius($leftTop, $rightTop, $rightBottom, $leftBottom) {
	@include rounded($leftTop $rightTop $rightBottom $leftBottom);
}

// ==== OPACITY ====
@mixin opacity($opacity: 0.5) {
	-webkit-opacity: $opacity;
	 -khtml-opacity: $opacity;
	   -moz-opacity: $opacity;
	        opacity: $opacity;
	-ms-filter: "progid:DXImageTransform.Microsoft.Alpha(Opacity=" + ($opacity * 100) + ")";
	filter: alpha(opacity=($opacity * 100));
}

// ==== TRANSFORM ====
@mixin transform($params) {
	-webkit-transform: $params;
	   -moz-transform: $params;
			transform: $params;
}

// ==== TRANSITION ====
@mixin transition($transition: all, $duration: 1s, $easing: ease-in-out) {

	@if($transition == transform) {
	-webkit-transition: -webkit-transform $duration $easing;
	   -moz-transition: -moz-transform $duration $easing;
	    -ms-transition: -ms-transform $duration $easing;
	     -o-transition: -o-transform $duration $easing;
	        transition: transform $duration $easing;
	}
	@else {
	-webkit-transition: $transition $duration $easing;
	   -moz-transition: $transition $duration $easing;
		-ms-transition: $transition $duration $easing;
		 -o-transition: $transition $duration $easing;
			transition: $transition $duration $easing;
	}
}

// ==== TRANSFORM ORIGIN ====
@mixin transform-origin($x: 50%, $y: 50%) {
	-webkit-transform-origin: $x $y;
	   -moz-transform-origin: $x $y;
		-ms-transform-origin: $x $y;
	     -o-transform-origin: $x $y;
			transform-origin: $x $y;
}

// ==== ROTATION ====
@mixin rotation($deg:5deg){
	@include transform(rotate($deg));
}

// ==== SCALE ====
@mixin scale($ratio:1.5){
	@include transform(scale($ratio));
}

// ==== BOX SIZING ====
@mixin box-sizing($type: border-box) {
	-webkit-box-sizing: $type;
	   -moz-box-sizing: $type;
			box-sizing: $type;
}

// ==== USER SELECT ====
@mixin user-select($argument: none) {
	-webkit-user-select: $argument;
	   -moz-user-select: $argument;
	    -ms-user-select: $argument;
	        user-select: $argument;
}

// ==== TRANSLATE ====
@mixin translate($x:0, $y:0) {
	@include transform(translate($x, $y));
}

// ==== BACKGROUND SIZE ====
@mixin background-size($width: 100%, $height: "") {
	-webkit-background-size: $width $height;
	   -moz-background-size: $width $height;
			background-size: $width $height;
}

// ==== RESIZE ====
@mixin resize($direction: both) {
	-webkit-resize: $direction;
	   -moz-resize: $direction;
			resize: $direction;
}

// ==== FONT SIZE ====
@mixin font-size($size) {
	font-size: $size;
	font-size: calculateRem($size);
}

// ==== LINE HEIGHT ====
@mixin line-height($height) {
	line-height: $height;
	line-height: calculateRem($height);
}

// ==== CLEAR FIX ====
@mixin clearfix() {
	*zoom: 1;

	&:before,
	&:after {
		content: "";
		display: table;
	}

	&:after {
		clear: both;
	}
}